!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports={Router:(e={})=>new Proxy(e,{get:(e,t,n)=>"handle"===t?async(t,...n)=>{for(let[o,r]of e.r.filter(e=>e[2]===t.method||"ALL"===e[2])){let e,s,a;if(e=(a=new URL(t.url)).pathname.match(o)){t.params=e.groups,t.query=t.query||Object.fromEntries(a.searchParams.entries());for(let e of r)if(void 0!==(s=await e(t.proxy||t,...n)))return s}}}:(o,...r)=>(e.r=e.r||[]).push([`^${((e.base||"")+o).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+|\()(\?)?(\.)?/g,"$2(?<$1>[^/$3]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`,r,t.toUpperCase()])&&n})}},function(e,t,n){"use strict";n.r(t);var o=n(0);const r=Object(o.Router)(),s={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST","Access-Control-Max-Age":"86400"};r.options("/pinset/:did/request",async e=>new Response(null,{headers:s})),r.post("/pinset/:did/request",async e=>{const t=await e.json();if(!t.pinsetRecordID)return new Response(JSON.stringify({error:"Could not find field 'pinsetRecordID'"}),{headers:{"Content-Type":"application/json",...s},status:400});const n=await fetch("https://gateway.ceramic.network/api/v0/streams/"+t.pinsetRecordID);console.log(n);const o=await n.json();if(!o||!o.state||!o.state.metadata)return new Response(JSON.stringify({error:"Malformed response"}),{headers:{"Content-Type":"application/json",...s},status:500});if(!o.state.metadata.controllers.includes(e.params.did))return new Response(JSON.stringify({error:"Record not controlled by DID"}),{headers:{"Content-Type":"application/json",...s},status:400});if(!(o.state.content&&o.state.content.root||o.state.next&&o.state.next.content.root))return new Response(JSON.stringify({error:"Bad record found"}),{headers:{"Content-Type":"application/json",...s},status:400});const r=o.state.next?o.state.next.content:o.state.content;console.log(r);const a=r.root.replace("ipfs://","");if(await PINS.get(a))return new Response(JSON.stringify({success:!0}),{headers:{"Content-Type":"application/json",...s},status:200});const i=await fetch("https://api.estuary.tech/content/add-ipfs",{method:"POST",headers:{Authorization:"Bearer "+ESTUARY_API_KEY,"Content-Type":"application/json"},body:JSON.stringify({name:a,root:a})}),c=await i.json();return c.content&&c.content.active?(await PINS.put(a,c.content.id),new Response(JSON.stringify({success:!0}),{headers:{"Content-Type":"application/json",...s},status:201})):new Response(JSON.stringify({error:"Malformed pin response"}),{headers:{"Content-Type":"application/json",...s},status:500})}),r.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(r.handle(e.request))})}]);