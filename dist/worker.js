!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports={Router:(e={})=>new Proxy(e,{get:(e,t,n)=>"handle"===t?async(t,...n)=>{for(let[r,o]of e.r.filter(e=>e[2]===t.method||"ALL"===e[2])){let e,s,a;if(e=(a=new URL(t.url)).pathname.match(r)){t.params=e.groups,t.query=t.query||Object.fromEntries(a.searchParams.entries());for(let e of o)if(void 0!==(s=await e(t.proxy||t,...n)))return s}}}:(r,...o)=>(e.r=e.r||[]).push([`^${((e.base||"")+r).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+|\()(\?)?(\.)?/g,"$2(?<$1>[^/$3]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`,o,t.toUpperCase()])&&n})}},function(e,t,n){"use strict";n.r(t);var r=n(0);const o=Object(r.Router)(),s={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET,HEAD,POST,OPTIONS","Access-Control-Max-Age":"86400"};o.post("/pinset/:did/request",async e=>{const t=await e.json();if(!t.pinsetRecordID)return new Response(JSON.stringify({error:"Could not find field 'pinsetRecordID'"}),{headers:{"Content-Type":"application/json",...s},status:400});const n=await fetch("https://gateway.ceramic.network/api/v0/streams/"+t.pinsetRecordID),r=await n.json();if(!r||!r.state||!r.state.metadata)return new Response(JSON.stringify({error:"Malformed response"}),{headers:{"Content-Type":"application/json",...s},status:500});if(!r.state.metadata.controllers.includes(e.params.did))return new Response(JSON.stringify({error:"Record not controlled by DID"}),{headers:{"Content-Type":"application/json",...s},status:400});if(!r.state.content||!r.state.content.root)return new Response(JSON.stringify({error:"Bad record found"}),{headers:{"Content-Type":"application/json",...s},status:400});const o=r.state.content.root.replace("ipfs://","");if(await PINS.get(o))return new Response(JSON.stringify({success:!0}),{headers:{"Content-Type":"application/json",...s},status:200});const a=await fetch("https://api.estuary.tech/content/add-ipfs",{method:"POST",headers:{Authorization:"Bearer "+ESTUARY_API_KEY,"Content-Type":"application/json"},body:JSON.stringify({name:o,root:o})}),i=await a.json();return i.content&&i.content.active?(await PINS.put(o,i.content.id),new Response(JSON.stringify({success:!0}),{headers:{"Content-Type":"application/json",...s},status:201})):new Response(JSON.stringify({error:"Malformed pin response"}),{headers:{"Content-Type":"application/json",...s},status:500})}),o.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(o.handle(e.request))})}]);