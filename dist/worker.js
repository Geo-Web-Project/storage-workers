!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t){e.exports={Router:(e={})=>new Proxy(e,{get:(e,t,r)=>"handle"===t?async(t,...r)=>{for(let[n,o]of e.r.filter(e=>e[2]===t.method||"ALL"===e[2])){let e,s,a;if(e=(a=new URL(t.url)).pathname.match(n)){t.params=e.groups,t.query=t.query||Object.fromEntries(a.searchParams.entries());for(let e of o)if(void 0!==(s=await e(t.proxy||t,...r)))return s}}}:(n,...o)=>(e.r=e.r||[]).push([`^${((e.base||"")+n).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+|\()(\?)?(\.)?/g,"$2(?<$1>[^/$3]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`,o,t.toUpperCase()])&&r})}},function(e,t,r){"use strict";r.r(t);var n=r(0);const o=Object(n.Router)();o.post("/pinset/:did/request",async e=>{const t=await e.json();if(!t.pinSetRecordID)return new Response(JSON.stringify({error:"Could not find field 'pinSetRecordID'"}),{status:400});const r=await fetch("https://gateway.ceramic.network/api/v0/streams/"+t.pinSetRecordID),n=await r.json();if(!n||!n.state||!n.state.metadata)return new Response(JSON.stringify({error:"Malformed response"}),{status:500});if(!n.state.metadata.controllers.includes(e.params.did))return new Response(JSON.stringify({error:"Record not controlled by DID"}),{status:400});if(!n.state.content||!n.state.content.root)return new Response(JSON.stringify({error:"Bad record found"}),{status:400});const o=n.state.content.root.replace("ipfs://",""),s=await fetch("https://api.estuary.tech/content/add-ipfs",{method:"POST",headers:{Authorization:"Bearer "+ESTUARY_API_KEY,"Content-Type":"application/json"},body:JSON.stringify({name:o,root:o})}),a=await s.json();return a.content&&a.content.active?new Response(JSON.stringify({success:!0}),{headers:{"Content-Type":"application/json"},status:202}):new Response(JSON.stringify({error:"Malformed pin response"}),{status:500})}),o.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(o.handle(e.request))})}]);r})}}});